<?xml version="1.0"?>
<!-- Launch SLAM of a bag file using NDT
-->
<launch>
  <arg name="bag_file" default="" doc="Set to play a bag file automatically" />
  <arg name="rviz_enabled" default="true" doc="Set to false to not start rviz" />
  <arg name="output_pointcloud_topic_name" default="/fused_cloud"/>

  <param name="/use_sim_time" value="true" />

  <!-- Start robot description -->
  <include file="$(find oru_ipw_description)/launch/automower_robot_description.launch" />

  <node pkg="tf2_ros" type="static_transform_publisher"
    name="velodyne_map_static_broadcaster" args="0 0 0 0 0 0 world map_velodyne" />

  <!-- start mapping node -->
  <node pkg="graph_map" type="graph_map_fuser_node" name="graph_node" output="screen">

    <!-- Choose weather to initiate pose to pose_init_<x,y,t> or the data of /<gt_topic> -->
    <param name="initPoseFromGT" value="false" />
    <param name="pose_init_x" value="0" />
    <param name="pose_init_y" value="0" />
    <param name="pose_init_z" value="0" />
    <param name="pose_init_r" value="0" />
    <param name="pose_init_p" value="0" />
    <param name="pose_init_t" value="0" />

    <param name="save_occupancy" value="true" />
    <!-- Select mapping technique to one of the methods listed in graph_map/include/graph_factory.h -->
    <param name="map_type" value="ndt_map" />

    <!-- use local maps instead of a single map, this can improve map descriptiveness -->
    <param name="use_submap" value="false" />
    <param name="interchange_radius" value="7" />
    <param name="compound_radius" value="0" />
    <param name="map_switching_method" value="node_position_esg" /> <!-- <node_position> (revisit previously mapped nodes), node_position_est (never revisit, form an exactly sparse submap graph -->

    <param name="velodyne_config_file" value="$(find oru_ipw_description)/calibration/vlp16_calib.yaml" />
    <!-- choose to disable essential parts of the software -->
    <param name="enable_registration" value="true" />
    <param name="registration_2D" value="false" />

    <!-- Select registration technique to one of the methods listed in graph_map/include/graph_factory.h -->
    <param name="registration_type" value="ndt_d2d_reg" />

    <!-- Use fine to course ndt_cells in registration -->
    <param name="multi-res" value="false" />
    <param name="resolutionLocalFactor" value="1.2" />

    <param name="reg_itr_max" value="30" />
    <!-- Resolution of a map, usually between 0.4 and 1.2 -->
    <param name="n_neighbours" value="1" />

    <param name="enable_mapping" value="true" />
    <param name="resolution" value="0.65" />
        
    <param name="tf_pose_frame" value="" />
    <param name="laser_frame_id" value="velodyne" />

    <!-- if laser_2d is true, a 2d scanner will be used for mapping-->
    <param name="laser_2d" value="false" />
    <!-- Topic of laser scanner -->
    <!--param name="points_topic" value="$(arg namespace_prefix)/kmo_navserver/laserscan1" /-->
    <param name="points_topic" value="/velodyne_packets" />
    <param name="output_pointcloud_topic_name" value="$(arg output_pointcloud_topic_name)" />

    <param name="useOdometry" value="true" />
    <param name="odometry_topic" value="/odom"/>
    <param name="use_tf_listener" value="false" />

    <!--  odometry frame id-->
    <param name="odom_tf" value="/odom" />
    <param name="base_tf" value="/base_link" />

    <!-- check if the registration pose output is similar to odometry prediction within max_translation_norm or max_rotation_norm -->
    <param name="check_consistency" value="true" />
    <param name="max_translation_norm" value="0.2" />
    <param name="max_rotation_norm" value="0.78539816339" />

    <!-- size of map -->
    <param name="size_x_meters" value="70" />
    <param name="size_y_meters" value="70" />
    <param name="size_z_meters" value="10" />
   

    <!--<param name="laser_variance_z" value="0.02" /> -->

    <!--range of sensor, min range can prevent self-mapping of the robot or operator of the lidar, max range can remove uncertain measurments -->
    <param name="max_range" value="130." />
    <param name="min_range" value="1.8" />

    <!-- Specific sensor offset parameters with respect to the odometry frame -->
    <param name="sensor_pose_x" value="0.2087" />
    <param name="sensor_pose_y" value="0.0" />
    <param name="sensor_pose_z" value="0.63821" />
    <param name="sensor_pose_t" value="0" />

    <!-- Output directory where the map is stored -->
    <!-- invoke rosservice call /graph_ -->
    <param name="map_directory" value="$(find oru_ipw_launch)/maps/ndt" />

    <param name="visualize" value="true" />
    <param name="disable_map_visualization" value="false" />
    <param name="T_map" value="3.0" />

    <!-- a minimum movement is required before fusing frames -->
    <param name="use_keyframe" value="true" />
    <param name="min_keyframe_dist" value="0.05" />
    <param name="min_keyframe_rot_deg" value="1.0" />
  </node>

  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
    <remap from="cloud_in" to="$(arg output_pointcloud_topic_name)"/>
    <param name="frame_id" value="map_velodyne"/>
    <param name="resolution" value="0.1"/>
    <param name="sensor_model/max_range" value="10.0"/>
    <param name="pointcloud_max_z" value="5"/>
    <param name="occupancy_min_z" value="0.1"/>
    <param name="occupancy_max_z" value="1.8"/>
  </node>


  <group if="$(arg rviz_enabled)">
    <node pkg="rviz" type="rviz" name="$(anon rviz-1)" />
  </group>

  <group if="$(eval arg('bag_file') != '')">
    <node pkg="rosbag" type="play" name="player" output="screen" args="--clock -r 1.0 $(arg bag_file)"/>
  </group>

</launch>
